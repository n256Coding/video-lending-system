/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package systemPackage;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author NishanV
 */
public class BuyVideo extends javax.swing.JFrame {

    /**
     * Creates new form BuyVideo
     */

    public BuyVideo() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        entityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("vlendingsystemdb?zeroDateTimeBehavior=convertToNullPU").createEntityManager();
        videosQuery = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT v FROM Videos v");
        videosList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : videosQuery.getResultList();
        videosQuery1 = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT v FROM Videos v");
        videosList1 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : videosQuery1.getResultList();
        videosQuery2 = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT v FROM Videos v");
        videosList2 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : videosQuery2.getResultList();
        videosQuery3 = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT v FROM Videos v");
        videosList3 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : videosQuery3.getResultList();
        videosQuery4 = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT v FROM Videos v");
        videosList4 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : videosQuery4.getResultList();
        videosQuery5 = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT v FROM Videos v");
        videosList5 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : videosQuery5.getResultList();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_videoList = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable_sellList = new javax.swing.JTable();
        jLabel_total = new javax.swing.JLabel();
        jLabel_total1 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jTable_videoList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Video ID", "Title", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable_videoList);
        if (jTable_videoList.getColumnModel().getColumnCount() > 0) {
            jTable_videoList.getColumnModel().getColumn(0).setResizable(false);
            jTable_videoList.getColumnModel().getColumn(1).setResizable(false);
            jTable_videoList.getColumnModel().getColumn(2).setResizable(false);
        }

        jButton1.setText("Buy Selected");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTable_sellList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "VideoID", "Quantity", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable_sellList);

        jLabel_total.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel_total.setForeground(new java.awt.Color(255, 51, 51));
        jLabel_total.setText("Total");

        jLabel_total1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel_total1.setText("Total Price:");

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel1.setText("Buy Video");

        jLabel2.setText("Videos in Store:");

        jLabel3.setText("Videos to Buy:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel_total1, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel_total, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 383, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 191, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel_total)
                        .addComponent(jLabel_total1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void refreshSellList(){
        double total = 0.0;
        DefaultTableModel table = (DefaultTableModel) jTable_sellList.getModel();
        
        
        int row = jTable_sellList.getRowCount();
        for(int i=0; i<row; i++)
            total = total+Double.parseDouble(jTable_sellList.getModel().getValueAt(i, 1).toString());
        jLabel_total.setText(String.valueOf(total));
    }
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
       DBConnect connect = new DBConnect();
       DefaultTableModel table = (DefaultTableModel) jTable_videoList.getModel();
       try{
           String query = "select * from videos";
           connect.rs = connect.st.executeQuery(query);
           while(connect.rs.next()){
               table.addRow(new Object[]{connect.rs.getString("videoId"), connect.rs.getString("title"), connect.rs.getString("price")});
           }
       }catch(Exception e){
       }
    }//GEN-LAST:event_formWindowOpened

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int row = jTable_videoList.getSelectedRow();
        String videoId = jTable_videoList.getModel().getValueAt(row, 0).toString();
        DBConnect connect = new DBConnect();
        int requestQty = Integer.parseInt(JOptionPane.showInputDialog("How many copies you want?"));
        int qty;
        double price = 0.0;
        try{
            String query = "select qty, price from videos where videoId = "+videoId+"";
            connect.rs = connect.st.executeQuery(query);
            connect.rs.next();
            qty = connect.rs.getInt("qty");
            price = connect.rs.getDouble("price");
            if(requestQty > qty)
                JOptionPane.showMessageDialog(null, "We have only "+qty+" copies!");
            else{
                qty = qty-requestQty;
                query = "update videos set qty = "+qty+" where videoId = "+videoId+"";
                connect.st.executeUpdate(query);
                query = "insert into sell (videoId, qty, price) values ("+videoId+", "+requestQty+", "+price*requestQty+")";
                connect.st.executeUpdate(query);
                refreshSellList();
                double total = 0.0;
        DefaultTableModel table = (DefaultTableModel) jTable_sellList.getModel();
        table.addRow(new Object[] {String.valueOf(videoId), String.valueOf(requestQty), String.valueOf(price*requestQty)});
        int rowCount = jTable_sellList.getRowCount();
        for(int i=0; i<rowCount; i++)
            total = total+Double.parseDouble(jTable_sellList.getModel().getValueAt(i, 2).toString());
        jLabel_total.setText(String.valueOf(total));
            }
        }catch(Exception e){
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BuyVideo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BuyVideo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BuyVideo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BuyVideo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BuyVideo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.persistence.EntityManager entityManager;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel_total;
    private javax.swing.JLabel jLabel_total1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable_sellList;
    private javax.swing.JTable jTable_videoList;
    private java.util.List<systemPackage.Videos> videosList;
    private java.util.List<systemPackage.Videos> videosList1;
    private java.util.List<systemPackage.Videos> videosList2;
    private java.util.List<systemPackage.Videos> videosList3;
    private java.util.List<systemPackage.Videos> videosList4;
    private java.util.List<systemPackage.Videos> videosList5;
    private javax.persistence.Query videosQuery;
    private javax.persistence.Query videosQuery1;
    private javax.persistence.Query videosQuery2;
    private javax.persistence.Query videosQuery3;
    private javax.persistence.Query videosQuery4;
    private javax.persistence.Query videosQuery5;
    // End of variables declaration//GEN-END:variables
}
